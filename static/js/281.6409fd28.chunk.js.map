{"version":3,"file":"static/js/281.6409fd28.chunk.js","mappings":"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","sources":["components/shared/Fetch/fetch.js","webpack://goit-react-hw-05-movies/./src/pages/MovieDetailsPage/movieDetailsPage.module.css?c394","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '472eb9c3f2ac1bf77bbb6771cd09c0a8',\n  },\n});\n\nexport const getTrending = async () => {\n  const { data } = await instance.get('/trending/all/day');\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`movie/${id}`);\n\n  return data;\n};\n\nexport const getMovie = async query => {\n  const { data } = await instance.get(`search/movie/`, {\n    params: {\n      query,\n    },\n  });\n\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n\n  return data;\n};\n\nexport const getReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"movieDetailsPage_card__XpEn1\",\"image\":\"movieDetailsPage_image__tohno\",\"description\":\"movieDetailsPage_description__+C+OL\",\"list\":\"movieDetailsPage_list__a1qjj\",\"item\":\"movieDetailsPage_item__NDr60\"};","import {\n  Link,\n  useParams,\n  useNavigate,\n  Outlet,\n  useLocation,\n} from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport styles from './movieDetailsPage.module.css';\n\nimport { getMovieById } from 'components/shared/Fetch/fetch';\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieDetailsPage = () => {\n  const [movie, setMovie] = useState({\n    content: {},\n    loading: false,\n    error: null,\n  });\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const location = useLocation();\n  const from = location?.state?.from || '/';\n  const goBack = () => navigate(from);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      setMovie(prevState => ({ ...prevState, loading: true }));\n      try {\n        const result = await getMovieById(id);\n        setMovie(prevState => ({\n          ...prevState,\n          loading: false,\n          content: result,\n        }));\n      } catch (error) {\n        setMovie(prevState => ({\n          ...prevState,\n          loading: false,\n          error: error.message,\n        }));\n      }\n    };\n    fetchMovie();\n  }, [id]);\n\n  const { content, loading, error } = movie;\n  const {\n    title,\n    vote_average,\n    overview,\n    poster_path,\n    release_date,\n    genres = [],\n  } = content;\n\n  return (\n    <>\n      {loading && <p>Loading...</p>}\n      {error && <p>Not found description of this film</p>}\n      <button type=\"button\" onClick={goBack}>\n        Go back\n      </button>\n      {Object.keys(content).length > 0 && (\n        <>\n          <div className={styles.card}>\n            {poster_path && (\n              <img\n                className={styles.image}\n                src={IMG_URL + poster_path}\n                alt={title}\n              />\n            )}\n            <div className={styles.description}>\n              <h2>\n                {title} ({release_date.slice(0, 4)})\n              </h2>\n              <p>User score: {vote_average * 10}%</p>\n              <h3>Overview</h3>\n              <p>{overview}</p>\n              <h3>Genres</h3>\n              <p>\n                {genres.map(({ id, name }) => (\n                  <span key={id}> {name}</span>\n                ))}\n              </p>\n            </div>\n          </div>\n          <p>Aditional information</p>\n          <ul className={styles.list}>\n            <li className={styles.item}>\n              <Link\n                state={{ from }}\n                className={styles.link}\n                to={`/movies/${id}/cast`}\n              >\n                Cast\n              </Link>\n            </li>\n            <li className={styles.item}>\n              <Link\n                state={{ from }}\n                className={styles.link}\n                to={`/movies/${id}/reviews`}\n              >\n                Reviews\n              </Link>\n            </li>\n          </ul>\n        </>\n      )}\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["instance","axios","baseURL","params","api_key","getTrending","get","data","getMovieById","id","getMovie","query","getCast","getReviews","useState","content","loading","error","movie","setMovie","useParams","navigate","useNavigate","location","useLocation","from","state","useEffect","fetchMovie","prevState","result","message","title","vote_average","overview","poster_path","release_date","genres","type","onClick","Object","keys","length","className","styles","src","alt","slice","map","name","to"],"sourceRoot":""}