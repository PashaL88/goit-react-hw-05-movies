{"version":3,"file":"static/js/549.868a90cd.chunk.js","mappings":"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","sources":["components/Modules/TrendingMovies/TrendingMovies.jsx","components/shared/Fetch/fetch.js","webpack://goit-react-hw-05-movies/./src/pages/MoviesPage/moviesPage.module.css?8b89","components/Modules/MoviesSearch/MoviesSearchForm/MoviesSearchForm.jsx","components/Modules/MoviesSearch/MoviesSearch.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst TrendingMovies = ({ items }) => {\n  const location = useLocation();\n\n  const elements = items.map(({ id, title, original_name }) => (\n    <li key={id}>\n      {\n        <Link state={{ from: location }} to={`/movies/${id}`}>\n          {title || original_name}\n        </Link>\n      }\n    </li>\n  ));\n\n  return <>{Boolean(items.length) && <ul>{elements}</ul>}</>;\n};\n\nexport default TrendingMovies;\n\nTrendingMovies.defaultProps = {\n  items: [],\n};\n\nTrendingMovies.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      original_name: PropTypes.string,\n    })\n  ),\n};\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '472eb9c3f2ac1bf77bbb6771cd09c0a8',\n  },\n});\n\nexport const getTrending = async () => {\n  const { data } = await instance.get('/trending/all/day');\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`movie/${id}`);\n\n  return data;\n};\n\nexport const getMovie = async query => {\n  const { data } = await instance.get(`search/movie/`, {\n    params: {\n      query,\n    },\n  });\n\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n\n  return data;\n};\n\nexport const getReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesPage\":\"moviesPage_moviesPage__oFuxn\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nconst MoviesSearchForm = ({ onSubmit }) => {\n  const [state, setState] = useState({\n    query: '',\n  });\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit({ ...state });\n    setState({ query: '' });\n  };\n\n  return (\n    <>\n      <form action=\"\" onSubmit={handleSubmit}>\n        <input\n          value={state.query}\n          name=\"query\"\n          onChange={handleChange}\n          type=\"text\"\n          placeholder=\"Movie\"\n        />\n        <button>Search</button>\n      </form>\n    </>\n  );\n};\n\nexport default MoviesSearchForm;\n\nMoviesSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import MoviesSearchForm from './MoviesSearchForm';\nimport { useState, useEffect } from 'react';\nimport { getMovie } from 'components/shared/Fetch/fetch';\nimport { useSearchParams } from 'react-router-dom';\nimport TrendingMovies from '../TrendingMovies';\n\nconst MoviesSearch = () => {\n  const [movies, setMovies] = useState({\n    items: [],\n    loading: false,\n    error: null,\n  });\n  const [searchParams, setSearchParams] = useSearchParams();\n  const onSubmit = ({ query }) => setSearchParams({ query });\n  const q = searchParams.get('query');\n\n  useEffect(() => {\n    const searchMovies = async () => {\n      setMovies(prevState => ({ ...prevState, loading: true }));\n      try {\n        const result = await getMovie(q);\n        setMovies(prevState => ({\n          ...prevState,\n          loading: false,\n          items: result.results,\n        }));\n      } catch (error) {\n        setMovies(prevState => ({\n          ...prevState,\n          loading: false,\n          error: error.message,\n        }));\n      }\n    };\n    if (q) {\n      searchMovies();\n    }\n  }, [q]);\n\n  const { items, loading, error } = movies;\n\n  return (\n    <>\n      <MoviesSearchForm onSubmit={onSubmit} />\n      <TrendingMovies items={items} />\n      {loading && <p>Loading...</p>}\n      {error && <p>{error}</p>}\n    </>\n  );\n};\n\nexport default MoviesSearch;\n","import styles from './moviesPage.module.css';\nimport MoviesSearch from 'components/Modules/MoviesSearch';\n\nconst MoviesPage = () => {\n  return (\n    <div className={styles.moviesPage}>\n      <MoviesSearch />\n    </div>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["TrendingMovies","items","location","useLocation","elements","map","id","title","original_name","state","from","to","Boolean","length","defaultProps","instance","axios","baseURL","params","api_key","getTrending","get","data","getMovieById","getMovie","query","getCast","getReviews","onSubmit","useState","setState","action","event","preventDefault","value","name","onChange","target","prevState","type","placeholder","loading","error","movies","setMovies","useSearchParams","searchParams","setSearchParams","q","useEffect","searchMovies","result","results","message","className","styles"],"sourceRoot":""}