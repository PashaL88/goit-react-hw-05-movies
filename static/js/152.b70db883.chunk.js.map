{"version":3,"file":"static/js/152.b70db883.chunk.js","mappings":"8QAqDA,EAjDiB,WACf,OAAwBA,EAAAA,EAAAA,UAAS,CAC/BC,MAAO,GACPC,SAAS,EACTC,MAAO,OAHT,eAAOC,EAAP,KAAaC,EAAb,KAKQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,2FAChBJ,GAAQ,SAAAK,GAAS,yBAAUA,GAAV,IAAqBR,SAAS,OAD/B,mBAGOS,EAAAA,EAAAA,IAAQL,GAHf,OAGRM,EAHQ,OAIdP,GAAQ,SAAAK,GAAS,yBACZA,GADY,IAEfR,SAAS,EACTD,MAAOW,EAAOR,UAPF,gDAUdC,GAAQ,SAAAK,GAAS,yBACZA,GADY,IAEfR,SAAS,EACTC,MAAO,KAAMU,aAbD,yDAAH,qDAiBfJ,MACC,CAACH,IAEJ,IAAQL,EAA0BG,EAA1BH,MAAOC,EAAmBE,EAAnBF,QAASC,EAAUC,EAAVD,MAGlBW,EAAWb,EAAMc,KAAI,gBAAGT,EAAH,EAAGA,GAAIU,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACzB,2BACE,gBAAKC,IAJO,kCAIQD,EAAcE,IAAKJ,EAAMK,MAAM,MAAMC,OAAQ,OACjE,uBAAIN,KACJ,uCAAeC,OAHRX,MAOX,OACE,gCACGJ,IAAW,sCACXC,IAAS,uBAAIA,IACbF,EAAMsB,SAAU,wBAAKT,S,iMC9CtBU,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAW,mCAAG,sGACFL,EAASM,IAAI,qBADX,uBACjBC,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,qDAKXC,EAAY,mCAAG,WAAM1B,GAAN,yFACHkB,EAASM,IAAT,gBAAsBxB,IADnB,uBAClByB,EADkB,EAClBA,KADkB,kBAGnBA,GAHmB,2CAAH,sDAMZE,EAAQ,mCAAG,WAAMC,GAAN,yFACCV,EAASM,IAAT,gBAA8B,CACnDH,OAAQ,CACNO,MAAAA,KAHkB,uBACdH,EADc,EACdA,KADc,kBAOfA,GAPe,2CAAH,sDAURpB,EAAO,mCAAG,WAAML,GAAN,yFACEkB,EAASM,IAAT,iBAAuBxB,EAAvB,aADF,uBACbyB,EADa,EACbA,KADa,kBAGdA,GAHc,2CAAH,sDAMPI,EAAU,mCAAG,WAAM7B,GAAN,yFACDkB,EAASM,IAAT,iBAAuBxB,EAAvB,aADC,uBAChByB,EADgB,EAChBA,KADgB,kBAGjBA,GAHiB,2CAAH","sources":["components/pages/CastPage/CastPage.jsx","components/shared/Fetch/fetch.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'components/shared/Fetch/fetch';\n\nconst CastPage = () => {\n  const [cast, setCast] = useState({\n    items: [],\n    loading: false,\n    error: null,\n  });\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      setCast(prevState => ({ ...prevState, loading: true }));\n      try {\n        const result = await getCast(id);\n        setCast(prevState => ({\n          ...prevState,\n          loading: false,\n          items: result.cast,\n        }));\n      } catch (error) {\n        setCast(prevState => ({\n          ...prevState,\n          loading: false,\n          error: error.message,\n        }));\n      }\n    };\n    fetchCast();\n  }, [id]);\n\n  const { items, loading, error } = cast;\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n  const elements = items.map(({ id, name, character, profile_path }) => (\n    <li key={id}>\n      <img src={IMG_URL + profile_path} alt={name} width=\"150\" height={200} />\n      <p>{name}</p>\n      <p>Character: {character}</p>\n    </li>\n  ));\n\n  return (\n    <>\n      {loading && <p>Loading...</p>}\n      {error && <p>{error}</p>}\n      {items.length && <ul>{elements}</ul>}\n    </>\n  );\n};\n\nexport default CastPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '472eb9c3f2ac1bf77bbb6771cd09c0a8',\n  },\n});\n\nexport const getTrending = async () => {\n  const { data } = await instance.get('/trending/all/day');\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`movie/${id}`);\n\n  return data;\n};\n\nexport const getMovie = async query => {\n  const { data } = await instance.get(`search/movie/`, {\n    params: {\n      query,\n    },\n  });\n\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n\n  return data;\n};\n\nexport const getReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n\n  return data;\n};\n"],"names":["useState","items","loading","error","cast","setCast","id","useParams","useEffect","fetchCast","prevState","getCast","result","message","elements","map","name","character","profile_path","src","alt","width","height","length","instance","axios","baseURL","params","api_key","getTrending","get","data","getMovieById","getMovie","query","getReviews"],"sourceRoot":""}