{"version":3,"file":"static/js/169.62035e8c.chunk.js","mappings":"uMAGMA,EAAiB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAWH,EAAMI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,cAAd,OACzB,0BACGD,IACC,SAAC,KAAD,CAAME,MAAO,CAAEC,KAAMR,GAAYS,GAAE,kBAAaL,GAAhD,SACGC,KAGHA,IACA,SAAC,KAAD,CAAME,MAAO,CAAEC,KAAMR,GAAYS,GAAE,kBAAaL,GAAhD,SACGE,MAREF,MAcX,OAAO,8BAAGM,QAAQX,EAAMY,UAAW,wBAAKT,OAG1C,IAEAJ,EAAec,aAAe,CAC5Bb,MAAO,K,6JCiBT,EAvCiB,WACf,OAAgCc,EAAAA,EAAAA,UAAS,CACvCd,MAAO,GACPe,SAAS,EACTC,MAAO,OAHT,eAAOC,EAAP,KAAiBC,EAAjB,MAMAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,2FACpBF,GAAY,SAAAG,GAAS,yBAAUA,GAAV,IAAqBN,SAAS,OAD/B,mBAGGO,EAAAA,EAAAA,MAHH,OAGZC,EAHY,OAIlBL,GAAY,SAAAG,GAAS,yBAChBA,GADgB,IAEnBN,SAAS,EACTf,MAAOuB,EAAOC,aAPE,gDAUlBN,GAAY,SAAAG,GAAS,yBAChBA,GADgB,IAEnBN,SAAS,EACTC,MAAO,KAAMS,aAbG,yDAAH,qDAiBnBL,MACC,IAEH,IAAQpB,EAA0BiB,EAA1BjB,MAAOe,EAAmBE,EAAnBF,QAASC,EAAUC,EAAVD,MACxB,OACE,4BACE,2CACCD,IAAW,sCACXC,IAAS,uBAAIA,KACd,SAACjB,EAAA,EAAD,CAAgBC,MAAOA,S,iMCrCvB0B,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAR,EAAW,mCAAG,sGACFI,EAASK,IAAI,qBADX,uBACjBC,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,qDAKXC,EAAY,mCAAG,WAAM5B,GAAN,yFACHqB,EAASK,IAAT,gBAAsB1B,IADnB,uBAClB2B,EADkB,EAClBA,KADkB,kBAGnBA,GAHmB,2CAAH,sDAMZE,EAAQ,mCAAG,WAAMC,GAAN,yFACCT,EAASK,IAAT,gBAA8B,CACnDF,OAAQ,CACNM,MAAAA,KAHkB,uBACdH,EADc,EACdA,KADc,kBAOfA,GAPe,2CAAH,sDAURI,EAAO,mCAAG,WAAM/B,GAAN,yFACEqB,EAASK,IAAT,iBAAuB1B,EAAvB,aADF,uBACb2B,EADa,EACbA,KADa,kBAGdA,GAHc,2CAAH,sDAMPK,EAAU,mCAAG,WAAMhC,GAAN,yFACDqB,EAASK,IAAT,iBAAuB1B,EAAvB,aADC,uBAChB2B,EADgB,EAChBA,KADgB,kBAGjBA,GAHiB,2CAAH","sources":["components/Modules/TrendingMovies/TrendingMovies.jsx","components/pages/HomePage/HomePage.jsx","components/shared/Fetch/fetch.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst TrendingMovies = ({ items }) => {\n  const location = useLocation();\n\n  const elements = items.map(({ id, title, original_name }) => (\n    <li key={id}>\n      {title && (\n        <Link state={{ from: location }} to={`/movies/${id}`}>\n          {title}\n        </Link>\n      )}\n      {!title && (\n        <Link state={{ from: location }} to={`/movies/${id}`}>\n          {original_name}\n        </Link>\n      )}\n    </li>\n  ));\n\n  return <>{Boolean(items.length) && <ul>{elements}</ul>}</>;\n};\n\nexport default TrendingMovies;\n\nTrendingMovies.defaultProps = {\n  items: [],\n};\n\nTrendingMovies.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      original_name: PropTypes.string,\n    })\n  ),\n};\n","import TrendingMovies from 'components/Modules/TrendingMovies';\nimport { useState, useEffect } from 'react';\n\nimport { getTrending } from '../../shared/Fetch/fetch';\n\nconst HomePage = () => {\n  const [trending, setTrending] = useState({\n    items: [],\n    loading: false,\n    error: null,\n  });\n\n  useEffect(() => {\n    const fetchTrending = async () => {\n      setTrending(prevState => ({ ...prevState, loading: true }));\n      try {\n        const result = await getTrending();\n        setTrending(prevState => ({\n          ...prevState,\n          loading: false,\n          items: result.results,\n        }));\n      } catch (error) {\n        setTrending(prevState => ({\n          ...prevState,\n          loading: false,\n          error: error.message,\n        }));\n      }\n    };\n    fetchTrending();\n  }, []);\n\n  const { items, loading, error } = trending;\n  return (\n    <div>\n      <h3>Trending today</h3>\n      {loading && <p>Loading...</p>}\n      {error && <p>{error}</p>}\n      <TrendingMovies items={items} />\n    </div>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '472eb9c3f2ac1bf77bbb6771cd09c0a8',\n  },\n});\n\nexport const getTrending = async () => {\n  const { data } = await instance.get('/trending/all/day');\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`movie/${id}`);\n\n  return data;\n};\n\nexport const getMovie = async query => {\n  const { data } = await instance.get(`search/movie/`, {\n    params: {\n      query,\n    },\n  });\n\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n\n  return data;\n};\n\nexport const getReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n\n  return data;\n};\n"],"names":["TrendingMovies","items","location","useLocation","elements","map","id","title","original_name","state","from","to","Boolean","length","defaultProps","useState","loading","error","trending","setTrending","useEffect","fetchTrending","prevState","getTrending","result","results","message","instance","axios","baseURL","params","api_key","get","data","getMovieById","getMovie","query","getCast","getReviews"],"sourceRoot":""}